name: Build other
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      reference:
        required: false
        type: string
      runner:
        required: true
        type: string
    secrets:
      KEY_TORRENTS:
        required: true
      KNOWN_HOSTS_UPLOAD:
        required: true

jobs:  

  gradle:
    if: ${{ github.repository_owner == 'Armbian' && inputs.reference != '' }}
    strategy:
      fail-fast: false
      matrix:
        board: [bananapi]
        release: [focal]
    
    name: Variant
    runs-on: ${{ inputs.runner }}
    steps:

      - name: Clean temporally folders
        run: |
          sudo rm -rf build/.tmp 2>/dev/null || true
          sudo mountpoint -q build/output/debs && sudo fusermount -u build/output/debs || true
          sudo mountpoint -q build/output/debs-beta && sudo fusermount -u build/output/debs-beta || true
          sudo mountpoint -q build/cache/rootfs && sudo fusermount -u build/cache/rootfs || true
          sudo mountpoint -q build/cache/toolchain && sudo fusermount -u build/cache/toolchain || true
          sudo chown -R $USER:$USER build || true

      - name: Checkout support scripts
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: armbian/scripts
          path: scripts
          clean: true

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 10
          repository: armbian/build
          path: build
          ref: ${{ inputs.reference }}
          clean: true

      - name: Pull Docker image
        run: |

          sudo docker pull ghcr.io/armbian/build:$(cat build/VERSION  | cut -d"." -f1-2)"-$(dpkg --print-architecture)"

      - name: Build test image
        run: |

          mkdir -p build/userpatches
          cp scripts/configs/* build/userpatches/
          cd build
          export TERM=dumb
          sed -i "s/-it --rm/-i --rm/" userpatches/config-docker.conf          
          ./compile.sh docker \
          BETA=yes \
          EXPERT=yes \
          BOARD=${{ matrix.board }} \
          BRANCH=current \
          RELEASE=${{ matrix.release }} \
          BUILD_MINIMAL=no \
          KERNEL_ONLY=yes \
          KERNEL_CONFIGURE=no \
          IGNORE_UPDATES=yes \
          REPOSITORY_INSTALL="u-boot,kernel,armbian-bsp-cli" \
          SKIP_EXTERNAL_TOOLCHAINS=yes \
          USE_MAINLINE_GOOGLE_MIRROR="yes"

      - name: Upload artefacts
        uses: actions/upload-artifact@v2
        with:
          name: firmware-zsh-armbian-config
          path: build/output/debs-beta/*
          if-no-files-found: ignore
          retention-days: 7

      - name: Install SSH key for storage
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY_TORRENTS }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_UPLOAD }}
          if_key_exists: replace

      - name: Deploy to server
        run: |

          if [[ "$(sudo fuser /var/lib/dpkg/lock 2>/dev/null; echo $?)" != 0 && "$(sudo fuser /var/lib/dpkg/lock-frontend 2>/dev/null; echo $?)" != 0 ]]; then
          sudo apt-get -y -qq install lftp
          fi
          lftp -u upload, -e "set net:timeout 10;set net:max-retries 16;mirror --Remove-source-files -R --no-empty-dirs --parallel=8 --include-glob=armbian-*.deb  --no-perms $(pwd)/build/output/debs-beta/ debs-beta/ ;bye" sftp://users.armbian.com
