name: Build test images with Docker
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      reference:
        required: false
        type: string
      runner:
        required: true
        type: string

jobs:  

  gradle:
    if: ${{ github.repository_owner == 'Armbian' && inputs.reference != '' }}
    strategy:
      fail-fast: false
      matrix:
        board: [uefi-x86,rpi4b]
        release: [focal,bullseye,jammy]
        desktop: [xfce,gnome,mate,cinnamon]
    
    name: Variant
    runs-on: ${{ inputs.runner }}
    steps:

      - name: Cache Gradle packages
        uses: actions/cache@v2
        env:
          cache-name: build-kernel
        with:
          path: build-kernel
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.run_id }}-linux
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.run_id }}-linux

      - name: Read value
        run: |

          echo "SKIP=$(cat build-kernel/skip 2> /dev/null || true)" >> $GITHUB_ENV
          echo ${{ env.SKIP }} 

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: armbian/build
          path: build
          ref: ${{ inputs.reference }}
          clean: true

      - name: Checkout support scripts
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: armbian/scripts
          path: scripts
          clean: true

      - name: Sync
        run: |

          mkdir -p build/userpatches
          sudo cp scripts/configs/* build/userpatches/
          
      - name: Pull Docker image
        run: |

          sudo docker pull ghcr.io/armbian/build:$(cat build/VERSION  | cut -d"." -f1-2)"-$(dpkg --print-architecture)"

      - name: Build test image
        run: |

          cd build
          export TERM=dumb
          sed -i "s/-it --rm/-i --rm/" userpatches/config-docker.conf          
          sed -i "s/COMPRESS_OUTPUTIMAGE=.*/COMPRESS_OUTPUTIMAGE=\"no\"/" userpatches/lib.config
          ./compile.sh docker \
          BETA=yes \
          EXPERT=yes \
          BOARD=${{ matrix.board }} \
          BRANCH=current \
          RELEASE=${{ matrix.release }} \
          BUILD_MINIMAL=no \
          BUILD_DESKTOP=yes \
          KERNEL_ONLY=no \
          KERNEL_CONFIGURE=prebuilt \
          COMPRESS_OUTPUTIMAGE=no \
          IGNORE_UPDATES=yes \
          REPOSITORY_INSTALL="u-boot,kernel" \
          DESKTOP_ENVIRONMENT_CONFIG_NAME="config_base" \
          DESKTOP_ENVIRONMENT=${{ matrix.desktop }} \
          SKIP_EXTERNAL_TOOLCHAINS=yes \
          FORCED_MONTH_OFFSET=12 \
          DESKTOP_APPGROUPS_SELECTED="3dsupport browsers"

      - name: Upload artefacts
        uses: actions/upload-artifact@v2
        with:
          name: "${{ matrix.board }}-${{ matrix.release }}-${{ matrix.desktop }}"
          path: build/output/images/*
          if-no-files-found: ignore
          retention-days: 7
