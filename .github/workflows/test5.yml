name: 555

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, edited, synchronize]

jobs:

  Build:
    name: Compile kernel
    runs-on: rockchip
    if: ${{ github.repository_owner == 'armbian' }}
    steps:

      - name: Checkout build repo
        uses: actions/checkout@v3
        with:
          repository: armbian/build
          ref:  main
          fetch-depth: 1
          clean: false

      - name: Install SSH key for storage
        env:
          KEY_ARMBIAN_UPLOAD: ${{ secrets.KEY_ARMBIAN_UPLOAD }}
        if: env.KEY_ARMBIAN_UPLOAD != null
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY_ARMBIAN_UPLOAD }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_ARMBIAN_UPLOAD }}
          if_key_exists: replace

      - name: Get JSON file
        env:
          KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
        if: env.KEY_TORRENTS != null
        run: |
          if ! command -v "lftp" > /dev/null 2>&1; then
             sudo apt-get -y -qq install lftp
          fi
          if ! command -v "jq" > /dev/null 2>&1; then
             sudo apt-get -y -qq install jq
          fi
          rm -f armbian_maintainers.json
          lftp -u upload, -e "cd json; get armbian_maintainers.json ;bye" sftp://${{ secrets.ARMBIAN_HOST_UPLOAD }}
          {
          jq -c '.[]' armbian_maintainers.json | while read i; do
          NAME=$(echo $i | jq --raw-output '.First_Name')
          BOARD=$(echo $i | jq --raw-output '.Maintaining')
          MAINTAINER_GITHUB=$(echo $i | jq --raw-output '.Github')
          echo "<ul>"
          if [[ $BOARD != null && $MAINTAINER_GITHUB != null ]]; then
          echo "<li><a href=$MAINTAINER_GITHUB>$NAME</a><ul>"
          for i in $(echo $BOARD | sed "s/,/ /g")
          do
            echo "  <li>$i</li>"
          done
          echo "</ul></li>"
            fi
          done
          echo "</ul>"
          } >> $GITHUB_STEP_SUMMARY
   
      - name: Build Kernel at ${{ github.event.pull_request.head.sha }}
        id: kernel
        run: |
          mkdir -p userpatches/extensions/
          cat <<- EOF > userpatches/extensions/pull-request.sh
          function post_family_config__force_commit_for_rk3588() {
              KERNELBRANCH="commit:${{ github.event.pull_request.head.sha }}"
          }
          EOF
          bash ./compile.sh kernel \
          GITHUB_ACTIONS="true" \
          GITHUB_ACTIONS="false" \
          SHARE_LOG="yes" \
          ARTIFACT_IGNORE_CACHE="yes" \
          BOARD="orangepi5" \
          BRANCH="legacy" \
          #ENABLE_EXTENSIONS="pull-request"
