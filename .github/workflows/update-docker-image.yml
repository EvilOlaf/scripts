name: Build Docker image
on:
  workflow_dispatch:
  workflow_call:
    secrets:
      CR_PAT:
        required: true
        
jobs:
  variants:
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu-latest,aarch64]
        target: [bullseye,sid,hirsute,jammy]

    name: ${{ matrix.runner }} ${{ matrix.target }}
    runs-on: ${{ matrix.runner }}
    if: ${{ github.repository_owner == 'Armbian' }}
    steps:

     - name: Checkout repository
       uses: actions/checkout@v2
       with:
         fetch-depth: 0
         repository: armbian/build
         path: build
         ref: "AR-1085"
         clean: false

     - name: Checkout support scripts
       uses: actions/checkout@v2
       with:
         fetch-depth: 0
         repository: armbian/scripts
         path: scripts
         clean: false

     - name: Sync
       run: |
         mkdir -p build/userpatches
         sudo cp scripts/configs/* build/userpatches/

     - name: Login to GitHub Container Registry
       uses: docker/login-action@v1
       with:
         registry: ghcr.io
         username: ${{ github.actor }}
         password: ${{ secrets.CR_PAT }}

     - name: Build Docker image

       run: |

         #sudo docker stop $(docker ps -a -q) 2>/dev/null || true
         #sudo docker rm $(docker ps -a -q) 2>/dev/null || true
         #sudo docker image rm $(docker images | grep -v $(cat build/VERSION | cut -d"." -f1-2)"-$(dpkg --print-architecture)" | awk 'NR>1 {print $3}') 2> /dev/null || true 
         #sudo docker images -a  | awk '{print $3}' | xargs docker rmi --force  2>/dev/null || true 

         cd build
         
         ./compile.sh JUST_INIT="yes" OFFLINE_WORK="yes" BRANCH=current RELEASE=focal  BUILD_MINIMAL=yes BUILD_DESKTOP=no KERNEL_ONLY=no KERNEL_CONFIGURE=no BOARD="zeropi" NO_HOST_RELEASE_CHECK="yes"
         
         # change template
         ln -fs dockerfiles/${{ matrix.target }}.dockerfile userpatches/Dockerfile

         sed -i "s/-it --rm/-i --rm/" config/templates/config-docker.conf
         touch .ignore_changes
         ./compile.sh docker \
         BOARD=virtual-qemu \
         BRANCH=current \
         RELEASE=focal \
         BUILD_MINIMAL=yes \
         BUILD_DESKTOP=no \
         KERNEL_ONLY=no \
         KERNEL_CONFIGURE=no \
         COMPRESS_OUTPUTIMAGE=no \
         REPOSITORY_INSTALL="u-boot,kernel,armbian-config,armbian-firmware" 
         JUST_INIT=yes

     - name: Push Docker image
       run: |

         #docker push ghcr.io/armbian/build:$(cat build/VERSION | sed 's/trunk.*/trunk/')"-$(dpkg --print-architecture)"
         docker push ghcr.io/armbian/build:$(cat build/VERSION | cut -d"." -f1-2)"-${{ matrix.target }}-$(dpkg --print-architecture)"
