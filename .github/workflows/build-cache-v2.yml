name: Build with Docker
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      sourcerepo:
       required: true
       type: string
      variant:
       required: true
       type: string
      runner:
        required: true
        type: string
      part:
        required: true
        type: number
      of:
        required: true
        type: number
      include:
        required: false
        type: string
      exclude:
        required: false
        type: string
      uploading:
        type: string
    secrets:
      GPG_KEY1:
        required: true
      GPG_PASSPHRASE1:
        required: true
      GPG_KEY2:
        required: true
      GPG_PASSPHRASE2:
        required: true
      SCRIPTS_ACCESS_TOKEN:
        required: true
      SSH_KEY_TORRENTS: 
        required: true
      KNOWN_HOSTS_UPLOAD:
        required: true

jobs:

  Prepare:

    name: targets
    runs-on: small
    outputs:
      release: ${{steps.list_dirs.outputs.release}}
      variant: ${{steps.list_dirs.outputs.variant}}
    steps:

      - name: Runner cleanup
        uses: igorpecovnik/freespace@main

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 10
          repository: armbian/build
          path: build
          clean: false

      - name: Prepare matrix
        id: list_dirs
        run: |

          echo ::set-output name=release::$(for x in $(grep -rw config/distributions/*/ -e 'supported' | cut -d"/" -f3); do echo $x; done|jq -cnR '[inputs | select(length>0)]' | jq)
          echo ::set-output name=variant::$(for x in $(echo "cli_1 cli_2"); do echo $x; done|jq -cnR '[inputs | select(length>0)]' | jq)

  image:
  
    needs: Prepare
    strategy:
      fail-fast: false
      matrix:
        release: ${{fromJson(needs.Prepare.outputs.release)}}
        variant: ${{fromJson(needs.Prepare.outputs.variant)}}

    runs-on: ${{fromJson(needs.Prepare.outputs.runner)}}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: armbian/build
          path: build

      - name: Checkout support scripts
        uses: actions/checkout@v3
        with:
          repository: armbian/scripts
          path: scripts

      - name: Runner cleanup
        uses: igorpecovnik/freespace@main

      - name: Copy templates
        run: |

          mkdir -p build/userpatches
          sudo cp scripts/configs/* build/userpatches/

      - name: Pull Docker image
        run: |

          [[ -z $(command -v docker) ]] && sudo apt-get -yy install docker containerd docker.io
          sudo docker kill $(sudo docker ps -q) 2>/dev/null || true          
          sudo docker image rm $(sudo docker images | grep -v $(cat build/VERSION | sed 's/trunk.*/trunk/')"-$(dpkg --print-architecture)" | grep armbian | awk 'NR>1 {print $3}') 2> /dev/null || true 
          sudo docker pull ghcr.io/armbian/build:$(cat build/VERSION  | cut -d"." -f1-2)"-$(dpkg --print-architecture)"
