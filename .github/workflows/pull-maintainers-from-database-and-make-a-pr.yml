name: "Read maintainers from DB"

on:
  schedule:
    - cron: "0 8 * * *"
  workflow_dispatch:

jobs:

  Build:
    name: Maintainers sync
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'armbian' }}
    steps:

      - name: Checkout build repo
        uses: actions/checkout@v3
        with:
          repository: armbian/build
          ref:  main
          fetch-depth: 0
          clean: false

      - name: Install SSH key for storage
        env:
          KEY_ARMBIAN_UPLOAD: ${{ secrets.KEY_ARMBIAN_UPLOAD }}
        if: env.KEY_ARMBIAN_UPLOAD != null
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.KEY_ARMBIAN_UPLOAD }}
          known_hosts: ${{ secrets.KNOWN_HOSTS_ARMBIAN_UPLOAD }}
          if_key_exists: replace

      - name: Get JSON file
        env:
          KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
        if: env.KEY_TORRENTS != null
        run: |

          # install dependencies
          if ! command -v "lftp" > /dev/null 2>&1; then
             sudo apt-get -y -qq install lftp
          fi
          if ! command -v "jq" > /dev/null 2>&1; then
             sudo apt-get -y -qq install jq
          fi
          # cleanup
          rm -f armbian_maintainers.json

          # download json that is prepared for this action in another cron job
          lftp -u upload, -e "cd json; get armbian_maintainers.json ;bye" sftp://${{ secrets.ARMBIAN_HOST_UPLOAD }}

          # lets make nice GitHub summary
          {
          echo "<ul>"
          function enable_extension()
          {
          return 0
          }
          
          # reset all maintainers so we generate from scratch
          sed -i "s/BOARD_MAINTAINER.*/BOARD_MAINTAINER=\"\"/" config/boards/*.{conf,wip,eos,tvb}

          jq -c '.[]' armbian_maintainers.json | while read i; do
          NAME=$(echo $i | jq --raw-output '.First_Name')
          BOARD=$(echo $i | jq --raw-output '.Maintaining')
          MAINTAINER_GITHUB=$(echo $i | jq --raw-output '.Github' | cut -d"/" -f4)
          if [[ $BOARD != null && $MAINTAINER_GITHUB != null ]]; then
          echo "    <li><a href=$MAINTAINER_GITHUB>$NAME</a>"
          echo "      <ul>"
                  for i in $(echo $BOARD | sed "s/,/ /g")
                  do
                      unset BOARD_NAME BOARD_MAINTAINER CFG_CONTENT
                      CFG_CONTENT="$(cat config/boards/${i}* 2> /dev/null | grep -e "BOARD_MAINTAINER\|BOARD_NAME" || true)"
                      if [[ -n "$CFG_CONTENT" ]]; then
                      eval "$CFG_CONTENT"
                      echo "        <li>$i</li>"
                      
                      if [[ -n "${BOARD_MAINTAINER}" && "${BOARD_MAINTAINER}" != *$MAINTAINER_GITHUB* ]]; then
                      BOARD_MAINTAINER+=" $MAINTAINER_GITHUB"
                      else
                      BOARD_MAINTAINER="$MAINTAINER_GITHUB"
                      fi
                      sed -i "s/BOARD_MAINTAINER.*/BOARD_MAINTAINER=\"$BOARD_MAINTAINER\"/" config/boards/${i}.* 
                      fi
                  done
          echo "      </ul>"
          echo "    </li>"
          fi
          done
          echo "</ul>"
          } >> $GITHUB_STEP_SUMMARY
          # cleanup
          rm -f armbian_maintainers.json

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          commit-message: Update report
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: update-maintainers
          delete-branch: true
          title: 'Maintainers list auto synchronise'
          body: |
            Update maintainers
            - synched from the database
            
          labels: |
            Maintenance :recycle:
          assignees: igorpecovnik
#          reviewers: EvilOlaf
          draft: false
